#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(:cl-gimei) :silent t)
  )

(defpackage :ros.script.gimei.3730694391
  (:use :cl :gimei))
(in-package :ros.script.gimei.3730694391)

(defun usage ()
  (format t "~&Usage: gimei name [kana]

name ::= name | male | female | address
kana ::= kanji | hiragana | katakana
")
  (ros:quit 1))

(defmacro case-string (string &body clauses)
  (let ((gstring (gensym)))
    `(let ((,gstring ,string))
       (cond ,@(mapcar (lambda (cl)
                         (if (eq (first cl) 'otherwise)
                             `(t ,@(rest cl))
                             `((string= ,gstring ,(first cl))
                               ,@(rest cl))))
                       clauses)))))

(defun main (&rest argv)
  (declare (ignorable argv))
  (unless (<= 1 (length argv) 2)
    (usage))
  (let ((*random-state* (make-random-state t)))
    (let ((gimei (case-string (first argv)
                   ("name" (make-name))
                   ("male" (make-male))
                   ("female" (make-female))
                   ("address" (make-address))
                   (otherwise (usage)))))
      (let ((kana-fn (if (second argv)
                         (case-string (second argv)
                           ("kanji" #'kanji)
                           ("hiragana" #'hiragana)
                           ("katakana" #'katakana)
                           (otherwise (usage)))
                         #'kanji)))
        (uiop:println (funcall kana-fn gimei))))))

;;; vim: set ft=lisp lisp:
